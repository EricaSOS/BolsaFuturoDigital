-- FILTRAR COM OPERADORES DE NEGAÇÃO (NOT), CONJUNÇÃO (AND), DISJUNÇÃO (OR), UPPER(), LOWER(), BETWEEN... AND..., NOT BETWEEN... AND..., LIKE, NOT LIKE, IN ('a', 'b'), NOT IN, IS NULL, IS NOT NULL
SELECT DESC_PROD
    FROM PRODUTO
    WHERE TRIM(UNID_PROD) = 'KG' AND VAL_UNIT > 2;
    
-- exercício 05
SELECT NOME_CLI, CIDADE, CEP
    FROM CLIENTE
    WHERE UPPER(TRIM(CIDADE)) = 'SAO PAULO' OR (CEP >= 20000005 AND CEP <= 20000010);

--EXERCICIO 05 COM OPERADOR BETWEEN    
SELECT NOME_CLI, CIDADE, CEP
    FROM CLIENTE
    WHERE UPPER(TRIM(CIDADE)) = 'SAO PAULO' OR (CEP BETWEEN 20000005 AND 20000010);

--EXERCÍCIO 06    

SELECT COD_PROD, DESC_PROD
    FROM PRODUTO
    WHERE VAL_UNIT BETWEEN 0.10 AND 3.00;

--EXERCÍCIO 07    
SELECT COD_PROD, DESC_PROD
    FROM PRODUTO
    WHERE UNID_PROD LIKE 'k__';
    
--EXERCÍCIO 08    
SELECT COD_VEND, NOME_VEND
    FROM VENDEDOR
    WHERE LOWER(FAIXA_COMISS) IN ('a', 'b');
    
SELECT COD_VEND, NOME_VEND
    FROM VENDEDOR
    WHERE LOWER(FAIXA_COMISS) NOT IN ('a', 'b');
    
--EXERCÍCIO 09    
SELECT NOME_CLI
    FROM CLIENTE
    WHERE ENDERECO IS NULL;
    
SELECT NOME_CLI
    FROM CLIENTE
    WHERE ENDERECO IS NOT NULL;


-- OREDENAR VALORES

--EXERCÍCIO 10    
SELECT NOME_VEND, SAL_FIXO
    FROM VENDEDOR
    ORDER BY NOME_VEND DESC;
    
SELECT NOME_VEND, SAL_FIXO
    FROM VENDEDOR
    ORDER BY NOME_VEND;
    
--EXERCÍCIO 11    
SELECT NOME_VEND, ((SAL_FIXO * 1.75) + 120) AS NOVO_SAL
    FROM VENDEDOR
    WHERE UPPER(FAIXA_COMISS) = 'C'
    ORDER BY NOME_VEND;
    
SELECT NOME_VEND, ((SAL_FIXO * 1.75) + 120)
    FROM VENDEDOR
    WHERE UPPER(FAIXA_COMISS) = 'C'
    ORDER BY NOME_VEND;


-- MÁXIMO, MÍNIMO, MÉDIA (AVG), CONTAR LINHAS E VALORES DISTINTOS
--EXERCÍCIO 12   
SELECT AVG(SAL_FIXO)
    FROM VENDEDOR;
    
--EXERCÍCIO 13  
SELECT COUNT(0)
    FROM VENDEDOR
    WHERE SAL_FIXO > 2000;
    
--EXERCÍCIO 14
SELECT DISTINCT CIDADE
    FROM CLIENTE;


-- AGRUPAMENTO E FILTRO DE AGRUPAMENTO
--EXERCÍCIO 15
SELECT NO_PED, COUNT(0) AS TOTAL_ITENS
    FROM ITEM_PEDIDO
    GROUP BY NO_PED;
    
--EXERCÍCIO 16
SELECT CIDADE, COUNT(0) AS TOTAL_CLIENTES
    FROM CLIENTE
    GROUP BY CIDADE
    ORDER BY CIDADE DESC;

SELECT NO_PED, COUNT(0) AS TOTAL_ITENS
    FROM ITEM_PEDIDO
    GROUP BY NO_PED
    HAVING COUNT(0) > 1;
    
SELECT CIDADE, COUNT(0) AS TOTAL_CLIENTES
    FROM CLIENTE
    GROUP BY CIDADE
    HAVING COUNT(0) > 1
    ORDER BY CIDADE DESC;
